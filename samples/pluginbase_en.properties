# Invalid player input
# Placeholder: {0} = player input
commands.invalid-player=&cInvalid player: &e{0}&c.

# Invalid world input
# Placeholder: {0} = world input
commands.invalid-world=&cInvalid world: &e{0}&c.

# Missing location parameter (x, y, or z coordinate)
# Placeholder: {0} = axis name (x, y, or z)
commands.missing-location-parameter=&cExpected &e{0}&c.

# Sender is not console
commands.sender-not-console=&cYou must be the console to execute this command!

# Sender is not a player
commands.sender-not-player=&cYou must be a player to execute this command!

# Malformed entity selector
# Placeholders: {0} = input, {1} = error message
commands.malformed-entity-selector=&cMalformed entity selector: &e{0}&c. Error: &e{1}

# Entity selector targets non-player entities
# Placeholder: {0} = selector input
commands.non-player-entities=&cEntity selector &e{0} &cmust only target players.

# Entity selector returned more than one entity when only one was expected
commands.more-than-one-entity=&cEntity selector must target only one entity.

# Entity selector returned no entities
commands.empty-entity-selector=&cNo entities were found.

# Invalid enum value
# Placeholder: {0} = invalid input
commands.enum-not-found=&cInvalid value: &e{0}&c.

# Expected a literal but got something else
# Placeholders: {0} = expected node name, {1} = actual input
commands.expected-literal=&cExpected &e{0}&c, found &e{1}&c.

# Invalid escape character in input
commands.input-parse.invalid-escape=&cInvalid input. Use &e\\\\ &cto include a backslash.

# Unclosed quote in input
commands.input-parse.unclosed-quote=&cUnclosed quote. Make sure to close all quotes.

# Expected whitespace after argument
commands.input-parse.expected-whitespace=&cUnexpected text after argument.

# List size too small
# Placeholders: {0} = minimum size, {1} = parameter name
commands.invalid-list-size.too-small=&cYou must input at least &e{0} &centries for &e{1}&c.

# List size too large
# Placeholders: {0} = maximum size, {1} = parameter name
commands.invalid-list-size.too-large=&cYou must input at most &e{0} &centries for &e{1}&c.

# String too short
# Placeholders: {0} = parameter name, {1} = minimum length
commands.invalid-string-size.too-small=&cParameter &e{0} &cmust be at least &e{1} &ccharacters long.

# String too long
# Placeholders: {0} = parameter name, {1} = maximum length
commands.invalid-string-size.too-large=&cParameter &e{0} &ccan be at most &e{1} &ccharacters long.

# Invalid boolean value
# Placeholder: {0} = invalid input
commands.invalid-boolean=&cExpected &etrue &cor &efalse&c, found &e{0}&c.

# Invalid decimal/double value
# Placeholder: {0} = invalid input
commands.invalid-decimal=&cInvalid number: &e{0}&c.

# Invalid integer value
# Placeholder: {0} = invalid input
commands.invalid-integer=&cInvalid integer: &e{0}&c.

# Invalid UUID format
# Placeholder: {0} = invalid input
commands.invalid-uuid=&cInvalid UUID: &e{0}&c.

# Missing required argument
# Placeholders: {0} = parameter name, {1} = command usage
commands.missing-argument=&cRequired parameter is missing: &e{0}&c. Usage: &e/{1}&c.

# No permission to execute command
commands.no-permission=&cYou do not have permission to execute this command!

# Number too small
# Placeholders: {0} = parameter name, {1} = input value, {2} = minimum
commands.number-not-in-range.too-small=&c{0} too small &e({1})&c. Must be at least &e{2}&c.

# Number too large
# Placeholders: {0} = parameter name, {1} = input value, {2} = maximum
commands.number-not-in-range.too-large=&c{0} too large &e({1})&c. Must be at most &e{2}&c.

# Invalid help page - only one page exists
# Placeholder: {0} = requested page number
commands.invalid-help-page.single=&cInvalid help page: &e{0}&c. Must be 1.

# Invalid help page - multiple pages exist
# Placeholders: {0} = requested page, {1} = total pages
commands.invalid-help-page.multiple=&cInvalid help page: &e{0}&c. Must be between &e1 &cand &e{1}&c.

# Unknown command with suggestion
# {0} = user input, {1} = suggested command
commands.failed-resolve=&cUnknown command: &e/{0}&c. Did you mean &e/{1}&c?

# Unknown/non-existent command
# Placeholder: {0} = command input
commands.unknown-command=&cUnknown command: &e{0}&c.

# Value not in allowed list
# Placeholders: {0} = invalid value, {1} = allowed values (comma-separated)
commands.value-not-allowed=&cInvalid value: &e{0}&c. Allowed: &e{1}&c.

# Internal error occurred during command execution
commands.internal-error=&cAn error occurred while executing this command. Please contact an administrator.

# Unknown shorthand flag (single character)
# Placeholder: {0} = flag name
commands.unknown-parameter.shorthand=&cUnknown shorthand flag: &e{0}&c.

# Unknown flag (full name)
# Placeholder: {0} = flag name
commands.unknown-parameter.flag=&cUnknown flag: &e{0}&c.

# Command is on cooldown
# Placeholder: {0} = time remaining (formatted duration)
commands.cooldown=&cYou must wait &e{0} &cbefore using this command again.
